{
    "name": "Wren",
    "scopeName": "source.wren",
    "fileTypes": [ "wren" ],

    "patterns": [
        { "include": "#code" }
    ],
    "repository": {
        "comment": {
            "name": "comment.line.wren",
            "match": "//.*"
        },
        "blockComment": {
            "name": "comment.block.wren",
            "begin": "/\\*",
            "end": "\\*/",
            "patterns": [ { "include": "#blockComment" } ]
        },
        "block": {
            "begin": "{",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.section.block.begin.wren"
                }
            },
            "end": "}",
            "endCaptures": {
                "0": {
                    "name": "punctuation.section.block.end.wren"
                }
            },
            "name": "meta.block.wren",
            "patterns": [
                { "include": "#code" },
                {
                    "name": "meta.block.parameters.wren",
                    "begin": "(?<=\\{\\s*)\\|",
                    "end": "\\|",
                    "patterns": [
                        {
                            "name": "variable.parameter.function.wren",
                            "match": "\\w+"
                        }
                    ]
                }
            ]
        },
        "keyword": {
            "patterns": [
                {
                    "name": "keyword.control.wren",
                    "match": "\\b(?:as|break|continue|else|for|if|import|in|return|while|var)\\b"
                },
                {
                    "name": "keyword.operator.wren",
                    "match": "\\b(is)\\b"
                },
                {
                    "name": "keyword.operator.logical.wren",
                    "match": "!|&&|\\|\\|"
                },
                {
                    "name": "keyword.operator.range.wren",
                    "match": "(\\.\\.\\.?)"
                },
                {
                    "name": "keyword.operator.arithmetic.wren",
                    "match": "(\\-|\\+|\\*|\/|%)"
                },
                {
                    "name": "keyword.operator.comparison.wren",
                    "match": "(==|!=|<=|>=|<|>)"
                },
                {
                    "name": "keyword.operator.assignment.wren",
                    "match": "(=)"
                }
            ]
        },
        "constant": {
            "patterns": [
                {
                    "name": "constant.language.wren",
                    "match": "\\b(true|false|null)\\b"
                },
                {
                    "name": "constant.numeric.wren",
                    "match": "\\b(0x[0-9a-fA-F]*|[0-9]+(\\.?[0-9]*)?([eE](\\+|-)?[0-9]+)?)\\b"
                },
                {
                    "name": "constant.numeric.hexadecimal.wren",
                    "match": "0x[A-Fa-f0-9]+"
                }
            ]
        },
        "variable": {
            "patterns": [
                {
                    "name": "variable.language.wren",
                    "match": "\\b(this|super)\\b"
                },
                {
                    "name": "variable.other.class.wren",
                    "match": "\\b__\\w*"
                },
                {
                    "name": "variable.other.instance.wren",
                    "match": "\\b_\\w*"
                }
            ]
        },
        "string": {
            "name": "string.quoted.double.wren",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                { "include": "#stringEscapes" }
            ]
        },
        "stringEscapes": {
            "patterns": [
                {
                    "name": "constant.character.escape.wren",
                    "match": "\\\\(?:[0\"\\abefnrtv]|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{4})"
                },
                {
                    "name": "invalid.illegal.unknown-escape.wren",
                    "match": "\\\\(?:x[0-9A-Fa-f]{0,1}|u[0-9A-Fa-f]{0,3}|U[0-9A-Fa-f]{0,7}|.)"
                },
                {
                    "name": "constant.character.interpolation.wren",
                    "match": "%\\((.*?)\\)"
                }
            ]
        },
        "multilineString": {
            "name": "string.quoted.multi.wren",
            "begin": "\"\"\"",
            "end": "\"\"\""
        },
        "function": {
            "name": "meta.function.wren",
            "match": "(?:[.]|\\b)(\\w+)\\(",
            "captures": {
                "1": { "name": "entity.name.function.wren" }
            }
        },
        "static_function": {
            "name": "meta.static_function.wren",
            "match": "\\b([A-Z]+\\w*)[.](\\w+)\\(",
            "captures": {
                "1": { "name": "entity.name.type.wren" },
                "2": { "name": "entity.name.function.class.wren" }
            }
        },
        "static_constant": {
            "name": "meta.static_constant.wren",
            "match": "\\b([A-Z]+\\w*)[.](\\w+)\\b",
            "captures": {
                "1": { "name": "entity.name.type.wren" },
                "2": { "name": "variable.other.constant" }
            }
        },
        "code": {
            "patterns": [
                { "include": "#attribute" },
                { "include": "#class" },
                { "include": "#blockComment" },
                { "include": "#comment" },
                { "include": "#block" },
                { "include": "#keyword" },
                { "include": "#constant" },
                { "include": "#variable" },
                { "include": "#string" },
                { "include": "#multilineString" },
                { "include": "#function" },
                { "include": "#static_function" },
                { "include": "#static_constant" }
            ]
        },
        "attribute": {
            "name": "meta.attribute.wren",
            "match": "^\\s*(#\\s*!?)\\s*(\\w+)",
            "captures": {
                "1": { "name": "punctuation.attribute.wren" },
                "2": { "name": "entity.name.attribute.wren" }
            }
        },
        "method": {
            "name": "meta.method.wren",
            "begin": "(?:\\b(construct|static)\\s+)?(\\w+=|\\w+|\\+|-|\\*|\\/|%|<=?|>=?|==|!=?|&|\\||~)",
            "beginCaptures": {
                "1": { "name": "storage.modifier.wren" },
                "2": { "name": "entity.name.function.wren" }
            },
            "end": "}",
            "patterns": [
                {
                    "name": "meta.method.identifier.wren",
                    "begin": "\\(",
                    "end": "\\)",
                    "patterns": [
                        {
                            "name": "variable.parameter.function.wren",
                            "match": "\\w+"
                        }
                    ]
                },
                {
                    "name": "meta.method.body.wren",
                    "begin": "{",
                    "end": "(?=})",
                    "patterns": [
                        { "include": "#code" }
                    ]
                }
            ]
        },
        "foreignMethod": {
            "name": "meta.method.wren",
            "begin": "\\b(foreign)\\s+(?:\\b(construct|static)\\s+)?(\\w+=|\\w+|\\+|-|\\*|\\/|%|<=?|>=?|==|!=?|&|\\||~)",
            "beginCaptures": {
                "1": { "name": "storage.modifier.wren" },
                "2": { "name": "storage.modifier.wren" },
                "3": { "name": "entity.name.function.wren" }
            },
            "end": "\n",
            "patterns": [
                { "include": "#comment" },
                {
                    "name": "meta.method.identifier.wren",
                    "begin": "\\(",
                    "end": "\\)",
                    "patterns": [
                        {
                            "name": "variable.parameter.function.wren",
                            "match": "\\w+"
                        }
                    ]
                }
            ]
        },
        "subscriptOperator": {
            "name": "meta.method.wren",
            "begin": "\\[",
            "beginCaptures": {
                "0": {
                    "name": "entity.name.function.wren"
                }
            },
            "end": "}",
            "patterns": [
                {
                    "name": "meta.method.identifier.wren",
                    "begin": "\\w",
                    "beginCaptures": {
                        "0": {
                            "name": "variable.parameter.function.wren"
                        }
                    },
                    "end": "\\]",
                    "endCaptures": {
                        "0": {
                            "name": "entity.name.function.wren"
                        }
                    },
                    "patterns": [
                        {
                            "name": "variable.parameter.function.wren",
                            "match": "\\w+"
                        }
                    ]
                },
                {
                    "name": "meta.method.body.wren",
                    "begin": "{",
                    "end": "(?=})",
                    "patterns": [
                        { "include": "#code" }
                    ]
                }
            ]
        },
        "class": {
            "name": "meta.class",
            "begin": "(?:\\b(foreign)\\s+)?(\\bclass)\\s+(\\w+)\\s+(?:(\\bis)\\s+(\\w+))?",
            "beginCaptures": {
                "1": { "name": "storage.modifier.wren" },
                "2": { "name": "storage.modifier.wren" },
                "3": { "name": "entity.name.class.wren" },
                "4": { "name": "storage.modifier.wren" },
                "5": { "name": "entity.name.class.wren" }
            },
            "end": "}",
            "endCaptures": {
                "0": { "name": "punctuation.section.class.end.wren" }
            },
            "patterns": [
                {
                    "name": "meta.class.body.wren",
                    "begin": "{",
                    "beginCaptures": {
                        "0": { "name": "punctuation.section.class.begin.wren" }
                    },
                    "patterns": [
                        { "include": "#attribute" },
                        { "include": "#comment" },
                        { "include": "#blockComment" },
                        { "include": "#foreignMethod" },
                        { "include": "#subscriptOperator" },
                        { "include": "#method" }
                    ],
                    "end": "(?=})"
                }
            ]
        }
    },
    "uuid": "fa761344-7fe1-4602-bfe3-7846848b7417"
}
